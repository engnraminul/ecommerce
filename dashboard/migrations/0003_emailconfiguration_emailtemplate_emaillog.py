# Generated by Django 5.2.5 on 2025-10-24 19:58

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0002_expense'),
        ('orders', '0012_alter_order_status_alter_orderstatushistory_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Configuration name for identification', max_length=100)),
                ('smtp_type', models.CharField(choices=[('gmail', 'Gmail SMTP'), ('business', 'Business SMTP')], default='gmail', max_length=20)),
                ('smtp_host', models.CharField(help_text='SMTP server hostname', max_length=255)),
                ('smtp_port', models.IntegerField(default=587, help_text='SMTP server port')),
                ('smtp_use_tls', models.BooleanField(default=True, help_text='Use TLS encryption')),
                ('smtp_use_ssl', models.BooleanField(default=False, help_text='Use SSL encryption')),
                ('smtp_username', models.CharField(help_text='SMTP username (usually email address)', max_length=255)),
                ('smtp_password', models.CharField(help_text='SMTP password or app password', max_length=255)),
                ('from_email', models.EmailField(help_text='Default sender email address', max_length=254)),
                ('from_name', models.CharField(help_text='Default sender name', max_length=255)),
                ('is_active', models.BooleanField(default=False, help_text='Use this configuration for sending emails')),
                ('is_verified', models.BooleanField(default=False, help_text='Configuration has been tested and verified')),
                ('test_email_sent', models.BooleanField(default=False)),
                ('last_test_date', models.DateTimeField(blank=True, null=True)),
                ('test_result', models.TextField(blank=True, help_text='Result of last test email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Email Configurations',
                'ordering': ['-is_active', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name for identification', max_length=100)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('activation', 'Account Activation'), ('password_reset', 'Password Reset'), ('order_confirmed', 'Order Confirmed'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('order_cancelled', 'Order Cancelled'), ('newsletter', 'Newsletter'), ('custom', 'Custom Template')], max_length=20, unique=True)),
                ('subject', models.CharField(help_text='Email subject line (supports variables)', max_length=255)),
                ('html_content', ckeditor.fields.RichTextField(help_text='HTML email content (supports variables like {{user_name}}, {{order_number}}, etc.)')),
                ('text_content', models.TextField(blank=True, help_text='Plain text email content (optional, will be auto-generated from HTML if empty)')),
                ('is_active', models.BooleanField(default=True, help_text='Enable this email template')),
                ('send_to_user_email', models.BooleanField(default=True, help_text="Send to user's profile email if logged in")),
                ('send_to_checkout_email', models.BooleanField(default=True, help_text='Send to checkout form email if no user email')),
                ('available_variables', models.TextField(blank=True, default='[]', help_text='JSON list of available variables for this template')),
                ('description', models.TextField(blank=True, help_text='Description of when this template is used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Email Templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(max_length=254)),
                ('sender_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('sent', 'Sent Successfully'), ('failed', 'Failed to Send'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('email_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='dashboard.emailconfiguration')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='dashboard.emailtemplate')),
            ],
            options={
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient_email', '-created_at'], name='dashboard_e_recipie_a0c311_idx'), models.Index(fields=['status', '-created_at'], name='dashboard_e_status_b4961f_idx')],
            },
        ),
    ]
