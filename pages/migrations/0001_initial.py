# Generated by Django 5.2.4 on 2025-10-11 19:07

import django.db.models.deletion
import django.utils.timezone
import pages.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page Category',
                'verbose_name_plural': 'Page Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('template_type', models.CharField(choices=[('default', 'Default'), ('landing', 'Landing Page'), ('article', 'Article'), ('contact', 'Contact'), ('about', 'About'), ('faq', 'FAQ'), ('privacy', 'Privacy Policy'), ('terms', 'Terms of Service'), ('custom', 'Custom')], default='default', max_length=20)),
                ('template_file', models.CharField(help_text='Template file path relative to templates/pages/', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='pages/templates/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page Template',
                'verbose_name_plural': 'Page Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('content', models.TextField(blank=True, help_text='Main page content')),
                ('excerpt', models.TextField(blank=True, help_text='Short description for meta tags and previews', max_length=500)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to=pages.models.page_image_upload_path)),
                ('featured_image_alt', models.CharField(blank=True, help_text='Alt text for featured image', max_length=200)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title (max 60 characters)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO description (max 160 characters)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords, comma separated', max_length=200)),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for SEO')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured pages section')),
                ('show_in_menu', models.BooleanField(default=False, help_text='Display in main navigation menu')),
                ('menu_order', models.PositiveIntegerField(default=0, help_text='Order in menu (0 = first)')),
                ('allow_comments', models.BooleanField(default=False)),
                ('require_login', models.BooleanField(default=False, help_text='Require user login to view')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date to publish the page')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Date when page expires (optional)', null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('share_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_pages', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_pages', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pages', to='pages.pagecategory')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pages.pagetemplate')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='pages.page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='pages.pagecomment')),
            ],
            options={
                'verbose_name': 'Page Comment',
                'verbose_name_plural': 'Page Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('document', 'Document'), ('audio', 'Audio')], max_length=20)),
                ('file', models.FileField(upload_to='pages/media/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('caption', models.CharField(blank=True, max_length=500)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='pages.page')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Page Media',
                'verbose_name_plural': 'Page Media',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True, max_length=500)),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('revision_note', models.CharField(blank=True, help_text='Note about this revision', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='pages.page')),
            ],
            options={
                'verbose_name': 'Page Revision',
                'verbose_name_plural': 'Page Revisions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('bounce_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('avg_time_on_page', models.DurationField(blank=True, null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='pages.page')),
            ],
            options={
                'verbose_name': 'Page Analytics',
                'verbose_name_plural': 'Page Analytics',
                'ordering': ['-date'],
                'unique_together': {('page', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['slug'], name='pages_page_slug_3e99a9_idx'),
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['status'], name='pages_page_status_48717e_idx'),
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['publish_date'], name='pages_page_publish_b99365_idx'),
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['is_featured'], name='pages_page_is_feat_6566a6_idx'),
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['show_in_menu'], name='pages_page_show_in_4abef8_idx'),
        ),
    ]
