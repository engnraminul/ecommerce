"""
ржмрж╛ржВрж▓рж╛ ржерзЗржХрзЗ ржЗржВрж░рзЗржЬрж┐ ржлрзЛржи ржиржорзНржмрж░ ржХржиржнрж╛рж░рзНрж╢ржи ржЯрзЗрж╕рзНржЯ
Test script for Bangla to English phone number conversion
"""

import sys
import os

# Add project root to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Import our phone utilities
from orders.phone_utils import convert_bangla_to_english_digits, normalize_bangladeshi_phone

def test_bangla_conversion():
    """Test Bangla to English digit conversion"""
    print("ЁЯзк ржмрж╛ржВрж▓рж╛ ржерзЗржХрзЗ ржЗржВрж░рзЗржЬрж┐ рж╕ржВржЦрзНржпрж╛ ржХржиржнрж╛рж░рзНрж╢ржи ржЯрзЗрж╕рзНржЯ")
    print("=" * 60)
    
    test_cases = [
        ("рзжрззрзнрзнрзнрззрзнрзйрзжрзкрзж", "01777173040"),
        ("рзжрззрзорзорзорззрзирзйрзкрзлрзм", "01888123456"),
        ("рзжрззрзпрзпрзпрзорзорзнрзнрзмрзм", "01999887766"),  # Fixed: removed incorrect character
        ("рзжрззрзлрзлрзлрзмрзмрзмрзнрзнрзн", "01555666777"),
        ("рзжрззрзйрззрзирзйрзкрзлрзмрзнрзо", "01312345678"),
        ("+рзорзорзжрззрзнрзнрзнрззрзнрзйрзжрзкрзж", "+8801777173040"),
        ("рзорзорзжрззрзорзорзорззрзирзйрзкрзлрзм", "8801888123456"),
        ("рзжрззрзнрзнрзн-рззрзнрзйрзжрзкрзж", "01777-173040"),
        ("рзжрззрзнрзнрзн рззрзнрзйрзжрзкрзж", "01777 173040"),
        ("ржорж┐рж╢рзНрж░: рзжрззрзнрзнрзнabcрззрзнрзйрзжрзкрзж", "ржорж┐рж╢рзНрж░: 01777abc173040")
    ]
    
    all_passed = True
    
    for i, (input_text, expected) in enumerate(test_cases, 1):
        result = convert_bangla_to_english_digits(input_text)
        passed = result == expected
        
        status = "тЬЕ ржкрж╛рж╕" if passed else "тЭМ ржлрзЗржЗрж▓"
        print(f"ржЯрзЗрж╕рзНржЯ {i:2d}: {status}")
        print(f"   ржЗржиржкрзБржЯ:    {input_text}")
        print(f"   ржЖржЙржЯржкрзБржЯ:   {result}")
        print(f"   ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд: {expected}")
        
        if not passed:
            all_passed = False
            print(f"   тЭМ ржорж┐рж▓ ржирзЗржЗ!")
        print()
    
    return all_passed

def test_phone_normalization():
    """Test complete phone number normalization"""
    print("ЁЯУ▒ ржлрзЛржи ржиржорзНржмрж░ ржирж░ржорж╛рж▓рж╛ржЗржЬрзЗрж╢ржи ржЯрзЗрж╕рзНржЯ")
    print("=" * 60)
    
    test_cases = [
        ("рзжрззрзнрзнрзнрззрзнрзйрзжрзкрзж", "01777173040"),
        ("рзжрззрзорзорзорззрзирзйрзкрзлрзм", "01888123456"),
        ("рзжрззрзпрзпрзпрзорзорзнрзнрзмрзм", "01999887766"),
        ("+рзорзорзжрззрзнрзнрзнрззрзнрзйрзжрзкрзж", "01777173040"),
        ("рзорзорзжрззрзорзорзорззрзирзйрзкрзлрзм", "01888123456"),
        ("рзжрззрзнрзнрзн-рззрзнрзйрзжрзкрзж", "01777173040"),
        ("рзжрззрзнрзнрзн рззрзнрзйрзжрзкрзж", "01777173040"),
        ("1777173040", "01777173040"),  # Missing leading 0
        ("8801777173040", "01777173040"),  # 88 prefix
        ("+8801777173040", "01777173040")  # +88 prefix
    ]
    
    all_passed = True
    
    for i, (input_phone, expected) in enumerate(test_cases, 1):
        result = normalize_bangladeshi_phone(input_phone)
        passed = result == expected
        
        status = "тЬЕ ржкрж╛рж╕" if passed else "тЭМ ржлрзЗржЗрж▓"
        print(f"ржЯрзЗрж╕рзНржЯ {i:2d}: {status}")
        print(f"   ржЗржиржкрзБржЯ:    {input_phone}")
        print(f"   ржЖржЙржЯржкрзБржЯ:   {result}")
        print(f"   ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд: {expected}")
        
        if not passed:
            all_passed = False
            print(f"   тЭМ ржорж┐рж▓ ржирзЗржЗ!")
        print()
    
    return all_passed

def test_mixed_input():
    """Test mixed Bangla-English input"""
    print("ЁЯФА ржорж┐рж╢рзНрж░ ржЗржиржкрзБржЯ ржЯрзЗрж╕рзНржЯ")
    print("=" * 60)
    
    test_cases = [
        ("рзж1рзн77рзз7рзй0рзк0", "01777173040"),  # Mixed digits
        ("рзжрззрзнрзнрзн173040", "01777173040"),   # Partial Bangla
        ("01рзнрзнрзнрззрзнрзйрзжрзкрзж", "01777173040"),   # Partial English
    ]
    
    all_passed = True
    
    for i, (input_phone, expected) in enumerate(test_cases, 1):
        # First convert digits
        converted = convert_bangla_to_english_digits(input_phone)
        # Then normalize
        result = normalize_bangladeshi_phone(converted)
        passed = result == expected
        
        status = "тЬЕ ржкрж╛рж╕" if passed else "тЭМ ржлрзЗржЗрж▓"
        print(f"ржЯрзЗрж╕рзНржЯ {i:2d}: {status}")
        print(f"   ржЗржиржкрзБржЯ:      {input_phone}")
        print(f"   ржХржиржнрж╛рж░рзНржЯ:     {converted}")
        print(f"   ржирж░ржорж╛рж▓рж╛ржЗржЬ:   {result}")
        print(f"   ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд:  {expected}")
        
        if not passed:
            all_passed = False
            print(f"   тЭМ ржорж┐рж▓ ржирзЗржЗ!")
        print()
    
    return all_passed

def test_edge_cases():
    """Test edge cases"""
    print("тЪая╕П  ржПржЬ ржХрзЗрж╕ ржЯрзЗрж╕рзНржЯ")
    print("=" * 60)
    
    test_cases = [
        ("", ""),  # Empty string
        ("рзж", "0"),  # Single digit
        ("рзжрзз", "01"),  # Two digits
        ("рзжрззрзнрзнрзнрззрзнрзйрзжрзкрзжрзлрзмрзнрзо", "017771730405678"),  # Too long - keeping digits only
    ]
    
    all_passed = True
    
    for i, (input_text, expected) in enumerate(test_cases, 1):
        result = convert_bangla_to_english_digits(input_text)
        passed = result == expected
        
        status = "тЬЕ ржкрж╛рж╕" if passed else "тЭМ ржлрзЗржЗрж▓"
        print(f"ржЯрзЗрж╕рзНржЯ {i:2d}: {status}")
        print(f"   ржЗржиржкрзБржЯ:    '{input_text}'")
        print(f"   ржЖржЙржЯржкрзБржЯ:   '{result}'")
        print(f"   ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд: '{expected}'")
        
        if not passed:
            all_passed = False
            print(f"   тЭМ ржорж┐рж▓ ржирзЗржЗ!")
        print()
    
    return all_passed

def main():
    """Run all tests"""
    print("ЁЯОп ржмрж╛ржВрж▓рж╛ ржлрзЛржи ржиржорзНржмрж░ ржХржиржнрж╛рж░рзНрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо ржЯрзЗрж╕рзНржЯ")
    print("=" * 80)
    print()
    
    results = []
    
    # Run digit conversion tests
    results.append(test_bangla_conversion())
    print()
    
    # Run phone normalization tests
    results.append(test_phone_normalization())
    print()
    
    # Run mixed input tests
    results.append(test_mixed_input())
    print()
    
    # Run edge case tests
    results.append(test_edge_cases())
    print()
    
    # Summary
    print("ЁЯУК ржЯрзЗрж╕рзНржЯ рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк")
    print("=" * 60)
    
    all_passed = all(results)
    total_tests = len(results)
    passed_tests = sum(results)
    
    print(f"ржорзЛржЯ ржЯрзЗрж╕рзНржЯ ржЧрзНрж░рзБржк: {total_tests}")
    print(f"ржкрж╛рж╕ рж╣ржпрж╝рзЗржЫрзЗ: {passed_tests}")
    print(f"ржлрзЗржЗрж▓ рж╣ржпрж╝рзЗржЫрзЗ: {total_tests - passed_tests}")
    
    if all_passed:
        print("\nЁЯОЙ рж╕ржм ржЯрзЗрж╕рзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржкрж╛рж╕ рж╣ржпрж╝рзЗржЫрзЗ!")
        print("тЬЕ ржмрж╛ржВрж▓рж╛ ржерзЗржХрзЗ ржЗржВрж░рзЗржЬрж┐ ржлрзЛржи ржиржорзНржмрж░ ржХржиржнрж╛рж░рзНрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо рж╕ржорзНржкрзВрж░рзНржг ржХрж╛ржЬ ржХрж░ржЫрзЗред")
    else:
        print(f"\nтЭМ ржХрж┐ржЫрзБ ржЯрзЗрж╕рзНржЯ ржлрзЗржЗрж▓ рж╣ржпрж╝рзЗржЫрзЗред ржжржпрж╝рж╛ ржХрж░рзЗ ржХрзЛржб ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржиред")
    
    return all_passed

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)